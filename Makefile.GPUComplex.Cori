EXE = gppKer_gpuComplex.ex
SRC = gppKer_gpuComplex.cpp 
#EXE = tryOmMe.ex
#SRC = tryOnMe.cpp 

#CXX = xlc++
CXX = CC 
#CXX = g++
#CXX = clang++

LINK = ${CXX}

CXXFLAGS=-O3 -std=c++11 -qopenmp -qopt-report=5 -qopenmp-offload=host
#CXXFLAGS+=-xCORE-AVX2
CXXFLAGS+=-xMIC-AVX512
LINKFLAGS=-qopenmp -dynamic

#ifeq ($(CXX),g++)
#	CXXFLAGS= -g -O3 -std=c++11 -fopenmp -foffload="-lm" -ffast-math -funroll-loops -ffast-math -funroll-loops #-foffload=nvptx-none
#	LINKFLAGS=-fopenmp -foffload="-lm" #-foffload=nvptx-none
#endif 
#
#ifeq ($(CXX),xlc++)
##	CXXFLAGS=-O3 -std=gnu++11 -g -qsmp
##	LINKFLAGS=-qsmp 
#	CXXFLAGS=-O3 -std=gnu++11 -g -qsmp=noauto:omp -qoffload #-Xptxas -v
#	LINKFLAGS=-qsmp=noauto:omp -qoffload 
#endif 
#
#ifeq ($(CXX),clang++)
#	CXXFLAGS=-O3 -std=gnu++11 -fopenmp -fopenmp-targets=nvptx64-nvidia-cuda --cuda-path=${CUDA_HOME}
#	LINKFLAGS=-fopenmp -fopenmp-targets=nvptx64-nvidia-cuda --cuda-path=${CUDA_HOME}
#endif 
#
#ifeq ($(CXX),icc)
#	CXXFLAGS=-O3 -qopenmp -qopt-report=5 -g
#	CXXFLAGS+=-xCORE_AVX2
##	CXXFLAGS+=-xMIC_AVX512
#	LINKFLAGS=-qopenmp -dynamic
#endif 

OBJ = $(SRC:.cpp=.o)

$(EXE): $(OBJ)  
	$(CXX) $(OBJ) -o $(EXE) $(LINKFLAGS)

$(OBJ1): $(SRC) 
	$(CXX) -c $(SRC) $(CXXFLAGS)

clean: 
	rm -f $(OBJ) $(EXE)

